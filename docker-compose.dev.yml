version: "3.9"

services:
  redis:
    image: redis:alpine3.15
    container_name: redis

  db:
    image: postgres:14-alpine3.15
    volumes:
      - ./postgres-data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    container_name: postgres_db

  app:
    build:
      context: .
    command: >
      sh -c "
             python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py startbot 
      "
    ports:
      - "8000:8000"
    image: app:django
    volumes:
      - .:/telegram-bot
    container_name: django-app
    environment:
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      - db

  celery:
    restart: always
    build:
      context: .
    command: celery -A core worker -l debug
    volumes:
      - .:/telegram-bot
    container_name: celery
    depends_on:
      - db
      - redis
      - app



